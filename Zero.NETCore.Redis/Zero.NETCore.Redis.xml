<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zero.NETCore.Redis</name>
    </assembly>
    <members>
        <member name="T:Zero.NETCore.Redis.RedisClient">
            <summary>
            Redis客户端,提供Get,Set及Remove方法
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisClient.Client">
            <summary>
            Redis客户端
            </summary>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            实例化Redis链接
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Set``1(System.String,``0)">
            <summary>
            存入Redis，使用默认的JsonSerializer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Set(System.String,System.String)">
            <summary>
            存入Redis
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Set``1(System.String,``0,System.TimeSpan)">
            <summary>
            存入Redis，并指定过期时间，使用默认的JsonSerializer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expiresIn"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Set(System.String,System.String,System.TimeSpan)">
            <summary>
            存入Redis
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expiresIn"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Get``1(System.String)">
            <summary>
            从Redis读取，使用默认的JsonSerializer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Get(System.String)">
            <summary>
            从Redis读取
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Get``1(System.Collections.Generic.List{System.String})">
            <summary>
            根据Key数组从Redis读取，使用默认的JsonSerializer
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Get(System.Collections.Generic.List{System.String})">
            <summary>
            根据Key数组从Redis读取
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Set(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            按参数指定的键值对，逐一存入Redis，
            </summary>
            <param name="keyValues"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Set``1(System.Collections.Generic.Dictionary{System.String,``0})">
            <summary>
            按参数指定的键值对，逐一存入Redis，
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keyValues"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Using(System.Action{StackExchange.Redis.IDatabase})">
            <summary>
            调用客户端
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Using``1(System.Func{StackExchange.Redis.IDatabase,``0})">
            <summary>
            调用客户端
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.UsingChannel(System.Action{StackExchange.Redis.ConnectionMultiplexer})">
            <summary>
            调用连接渠道
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.UsingChannel``1(System.Func{StackExchange.Redis.ConnectionMultiplexer,``0})">
            <summary>
            调用连接渠道
            </summary>
            <typeparam name="T"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Remove(System.String)">
            <summary>
            移除Redis key
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Remove(System.Collections.Generic.List{System.String})">
            <summary>
            移除Redis key
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.RenderRedisKey(System.String,System.String)">
            <summary>
            生成RedisKey
            </summary>
            <param name="prefixKey"></param>
            <param name="arg0"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.RenderRedisKey(System.String,System.String,System.String)">
            <summary>
            生成RedisKey
            </summary>
            <param name="prefixKey"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.RenderRedisKey(System.String,System.String,System.String,System.String)">
            <summary>
            生成RedisKey
            </summary>
            <param name="prefixKey"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.RenderRedisKey(System.String,System.String[])">
            <summary>
            生成RedisKey
            </summary>
            <param name="prefixKey"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Zero.NETCore.Redis.RedisClient.Dispose">
            <summary>
            释放连接
            </summary>
        </member>
        <member name="T:Zero.NETCore.Redis.RedisConfig">
            <summary>
            Redis配置
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.Host">
            <summary>
            Host
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.KeepAlive">
            <summary>
            长连接秒数
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.ConnectRetry">
            <summary>
            重试次数
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.ConnectTimeout">
            <summary>
            连接超时毫秒数
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.SyncTimeout">
            <summary>
            异步响应超时毫秒数
            </summary>
        </member>
        <member name="P:Zero.NETCore.Redis.RedisConfig.DBRegion">
            <summary>
            数据分片
            </summary>
        </member>
    </members>
</doc>
